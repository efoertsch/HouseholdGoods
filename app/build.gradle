apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "org.householdgoods"
        minSdkVersion 27
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // This is here to avoid
    // java.lang.RuntimeException: Method d in android.util.Log not mocked. See http://g.co/androidstudio/not-mocked for details.
    // i.e. My little test code was using Log.d to output results for eyeball check
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    final MATERIAL_VERSION = '1.3.0-alpha02'

    final ANDROIDX_APPCOMPAT_VERSION = '1.2.0'
    final ANDROIDX_RECYCLERVIEW_VERSION = '1.1.0'
    final ANDROIDX_PREFERENCE_VERSION = '1.1.1'
    final ANDROIDX_CONSTRAINT_LAYOUT_VERSION = '2.0.1'
    final ANDROIDX_LEGACY_SUPPORT_VERSION = '1.0.0'
    final ANDROIDX_ANNOTATION_VERSION = '1.1.0'
    final NAV_VERSION = "2.3.0"
    final KOTLIN_COROUTINES = '1.3.7'

    final RX_ANDROID = '2.0.2'
    final RX_JAVA = '2.2.9'
    final RETROFIT = '2.6.0'
    final GSON = '2.8.5'
    final GSON_CONVERTER = '2.3.0'
    final GLIDE = '4.9.0'
    final OKHTTP = '3.12.0'
    final ROOM_VERSION = '2.2.5'
    final ARCH_LIFE_CYCLE_VERSION = '2.2.0'
    final TIMBER = '4.7.0'
    final GLIDE_VERSION = '4.11.0'

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.google.android.material:material:$MATERIAL_VERSION"

    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.appcompat:appcompat:$ANDROIDX_APPCOMPAT_VERSION"
    implementation "androidx.recyclerview:recyclerview:$ANDROIDX_RECYCLERVIEW_VERSION"
    implementation "androidx.legacy:legacy-support-v4:$ANDROIDX_LEGACY_SUPPORT_VERSION"
    implementation "androidx.preference:preference:$ANDROIDX_PREFERENCE_VERSION"
    implementation "androidx.constraintlayout:constraintlayout:$ANDROIDX_CONSTRAINT_LAYOUT_VERSION"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$ARCH_LIFE_CYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$ARCH_LIFE_CYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$ARCH_LIFE_CYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$ARCH_LIFE_CYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-common-java8:$ARCH_LIFE_CYCLE_VERSION"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.0"

    // following https://dev.to/anesabml/dagger-hilt-basics-23g8
    //Hilt Dependency Injection
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    // For injecting ViewModel
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    // For injecting WorkManager
    implementation "androidx.hilt:hilt-work:1.0.0-alpha02"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$KOTLIN_COROUTINES"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$KOTLIN_COROUTINES"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$NAV_VERSION"
    implementation "androidx.navigation:navigation-ui-ktx:$NAV_VERSION"
    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$NAV_VERSION"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$NAV_VERSION"

    // Timber for logging
    implementation "com.jakewharton.timber:timber:$TIMBER"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$NAV_VERSION"
    implementation "androidx.navigation:navigation-ui:$NAV_VERSION"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT"
    implementation("com.squareup.retrofit2:adapter-rxjava2:$RETROFIT") {
        exclude group: 'io.reactivex.java2', module: 'rxjava'
    }

    // RxJava
//    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA"
//    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID"

    // GSON (JSON)
    implementation "com.google.code.gson:gson:$GSON"
    implementation "com.squareup.retrofit2:converter-gson:$GSON_CONVERTER"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$OKHTTP"

    //GLide
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"

    //
    // testImplementation for pure JVM unit tests
    //testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$KOTLIN_COROUTINES"

    // androidTestImplementation for Android instrumentation tests
    //androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$KOTLIN_COROUTINES"


    // For unit testing WC photo upload
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-net:commons-net:3.7'
    implementation 'commons-codec:commons-codec:1.15'

    implementation 'org.apache.commons:commons-text:1.7'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}